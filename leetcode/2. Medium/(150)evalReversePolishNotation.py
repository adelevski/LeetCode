
# tokens = ["10","6","9","3","+","-11","*","/","*","17","+","5","+"]
# Output: 22
# Explanation: ((10 * (6 / ((9 + 3) * -11))) + 17) + 5
# = ((10 * (6 / (12 * -11))) + 17) + 5
# = ((10 * (6 / -132)) + 17) + 5
# = ((10 * 0) + 17) + 5
# = (0 + 17) + 5
# = 17 + 5
# = 22

# tokens = ["2","1","+","3","*"]
# Output: 9

tokens = ["4","-2","/","2","-3","-","-"]
# Output: -7

# tokens = ["-78","-33","196","+","-19","-","115","+","-","-99","/","-18","8","*","-86","-","-","16","/","26","-14","-","-","47","-","101","-","163","*","143","-","0","-","171","+","120","*","-60","+","156","/","173","/","-24","11","+","21","/","*","44","*","180","70","-40","-","*","86","132","-84","+","*","-","38","/","/","21","28","/","+","83","/","-31","156","-","+","28","/","95","-","120","+","8","*","90","-","-94","*","-73","/","-62","/","93","*","196","-","-59","+","187","-","143","/","-79","-89","+","-"]
# Output: 165


# My own method
def evalRPN(tokens):
    def evaluate(op1,op2,s):
        if s == "+":
            return op1 + op2
        elif s == "-":
            return op1 - op2
        elif s == "*":
            return op1*op2
        else:
            return int(op1/op2)

    N = len(tokens)
    results = []
    for i in range(N):
        if tokens[i] not in "+-/*":
            results.append(int(tokens[i]))
        else:
            op2 = results.pop()
            op1 = results.pop()
            results.append(evaluate(op1, op2, tokens[i]))

    return results[0]

print(evalRPN(tokens))


